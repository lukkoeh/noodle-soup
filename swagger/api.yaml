openapi: 3.0.3
info:
  title: Noodle Backend
  version: "1.0"
  description: This is a server concept for the Noodle learning management system backend
tags:
  - name: user
    description: Operations about user
security:
  - cookieAuth: [ ]
paths:
  /users/{userId}:
    get:
      tags:
        - user
      summary: Retrieve user data
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: Malformed request
        '401':
          description: You're not allowed to access user data.
        '500':
          description: internal server error
    patch:
      tags:
        - user
      summary: Change user data
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: Malformed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailValidation'
        '401':
          description: You're not allowed to access user data.
        '409':
          description: Email is already taken.
        '500':
          description: internal server error
    delete:
      tags:
        - user
      summary: Delete user
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: successful operation
        '400':
          description: Malformed request
        '401':
          description: You're not allowed to access user data.
        '500':
          description: internal server error
  /user:
    get:
      tags:
        - user
      summary: Retrieve your user data
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: Malformed request
        '401':
          description: You're not allowed to access user data.
        '500':
          description: internal server error
    post:
      tags:
        - user
      summary: Create user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '409':
          description: User already exists.
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsValidation'
        '401':
          description: You're not allowed to access user data.
        '500':
          description: internal server error

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: BLOODLESSNESS
  schemas:
    User:
      type: object
      properties:
        firstname:
          type: string
          example: theUser
        lastname:
          type: string
          example: theUser
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
    UserProfile:
      type: object
      properties:
        userId:
          type: integer
          example: 69
        firstname:
          type: string
          example: theUser
        lastname:
          type: string
          example: theUser
    CredentialsValidation:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/EmailValidation'
        password:
          $ref: '#/components/schemas/PasswordValidation'
    PasswordValidation:
      type: object
      properties:
        tooShort:
          type: boolean
          example: true
        uppercaseMissing:
          type: boolean
          example: false
        lowercaseMissing:
          type: boolean
          example: true
        digitMissing:
          type: boolean
          example: false
        specialMissing:
          type: boolean
          example: true
    EmailValidation:
      type: object
      properties:
        tooShort:
          type: boolean
          example: true
        tooLong:
          type: boolean
          example: false
        illegalChar:
          type: boolean
          example: true
        invalidFormat:
          type: boolean
          example: false
